<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

  {{!-- <link rel="icon" type="image/x-icon" href="/views/layouts/tabs.png"> --}}

</head>
<div >
<h3 class="col-sm-1"><a class="btn btn-secondary" href="/network">New List</a></h3> 
<h3 class="col-sm-1"><a class="btn btn-secondary" href="/excel">Import Excel</a></h3>
<h3 class="col-sm-1"><a class="btn btn-secondary" href="/convToCsv">Convert to csv</a></h3>
</div>

<!-- <style>
    #myInput {
  background-image: url('/css/searchicon.png'); /* Add a search icon to input */
  background-position: 10px 12px; /* Position the search icon */
  background-repeat: no-repeat; /* Do not repeat the icon image */
  width: 100%; /* Full-width */
  font-size: 16px; /* Increase font-size */
  padding: 12px 20px 12px 40px; /* Add some padding */
  border: 1px solid #ddd; /* Add a grey border */
  margin-bottom: 12px; /* Add some space below the input */
}

#myUL {
  /* Remove default list styling */
  list-style-type: none;
  padding: 0;
  margin: 0;
}

#myUL tr a {
  border: 1px solid #ddd; /* Add a border to all links */
  margin-top: -1px; /* Prevent double borders */
  background-color: #f6f6f6; /* Grey background color */
  padding: 12px; /* Add some padding */
  text-decoration: none; /* Remove default text underline */
  font-size: 18px; /* Increase the font-size */
  color: black; /* Add a black text color */
  display: block; /* Make it into a block element to fill the whole list */
}

#myUL tr a:hover:not(.header) {
  background-color: #eee; /* Add a hover effect to all links, except for headers */
}
</style> -->

<style>
   /* styling search bar */
    .search input[type=text]{
        height: 35px;
        border-radius:5px;
        
        border-color: blue;
    }
          
    .search{
        float:left;
        margin:0.5px;
    }
</style>

<br>
<div class="search">
<input class="md-form mt-0" type="text" id="myInput" onkeyup="myFunction()" placeholder="Search..." title="Type in a name" >
</div>
<br><br><br>



<table class="table table-striped" id="myTable">
    <thead>
        <tr>
            <th>PC Name</th>
            <th>New IP</th>
            <th>Gateway</th>
            <th>Mac</th>

            <th>Cisco Port</th>
            <th>User Name</th>
            <th>Location</th>
            <th>Birou</th>

            <th>Apps</th>
            <th>Computer</th>
            <th>Connected</th>
            <th>Port Location Switch</th>

            <th>Operating System</th>
            <th>Phone</th>
            <th>Data</th>
            <th>Port Security</th>
        </tr>
    </thead>
    <tbody>
        
        {{#each list}}
        <tr > 
            <td><a href="#">        {{this.pcName}}         </a></td>   
            <td><a href="#">        {{this.newIP}}          </a></td>   
            <td><a href="#">        {{this.gateway}}        </a></td>
            <td><a href="#">        {{this.mac}}            </a></td>
            <td><a href="#">        {{this.ciscoPort}}      </a></td>
            <td><a href="#">        {{this.userName}}       </a></td>
            <td><a href="#">        {{this.location}}       </a></td>
            <td><a href="#">        {{this.birou}}          </a></td>
            <td><a href="#">        {{this.apps}}           </a></td>
            <td><a href="#">        {{this.comp}}           </a></td>
            <td><a href="#">        {{this.connected}}      </a></td>
            <td><a href="#">        {{this.portLocSwitch}}  </a></td>
            <td><a href="#">        {{this.so}}             </a></td>
            <td><a href="#">        {{this.phone}}          </a></td>
            <td><a href="#">        {{this.data}}           </a></td>
            <td><a href="#">        {{this.portSec}}        </a></td>
            
            <td>
                <a class="btn btn-primary btn-sm" href="/network/{{this.id}}">Edit</a>
                <a class="btn btn-primary btn-sm" href="/network/delete/{{this.id}}" 
                onclick="return confirm('Are you sure you want to delete this record');">Delete</a>
            </td>
            
        </tr>
        {{/each}}
        
    </tbody>
</table>

<style>
    table {
    counter-reset: rowNumber;
}

table tr > td:first-child {
    counter-increment: rowNumber;
}

table tr td:first-child::before {
    content: counter(rowNumber);
    min-width: 1em;
    margin-right: 0.5em;
}
</style>


<br>
<script>
function myFunction() {

    
var input, filter, table, tr, td, i, txtValue,semafor=0;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("myTable");
  tr = table.getElementsByTagName("tr");
  
  for (i = 1; i < tr.length; i++) {
        //raw 1 new ip
        td = tr[i].getElementsByTagName("td")[1];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            //tr[i].style.display = "";
            semafor = 1;
          } else {
            //tr[i].style.display = "none";
            
          }
        }

        // raw 5 user name
        td = tr[i].getElementsByTagName("td")[5];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            //tr[i].style.display = "";
            semafor = 1;
          } else {
            //tr[i].style.display = "none";
          }
        }

        // raw 6 location
        td = tr[i].getElementsByTagName("td")[6];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            //tr[i].style.display = "";
            semafor = 1;
          } else {
            //tr[i].style.display = "none";
          }
        }

        // raw 11 switch
        td = tr[i].getElementsByTagName("td")[11];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            //tr[i].style.display = "";
            semafor = 1;
          } else {
            //tr[i].style.display = "none";
          }
        }

        if (semafor){
            tr[i].style.display = "";
        }else{
            tr[i].style.display = "none";
        }
        semafor = 0;
    
}
    
    /*
    var input, filter, li, tr, a, i, j ,txtValue;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    li = document.getElementById("myUL");
    tr = li.getElementsByTagName("td");
    for (i = 0; i < tr.length; i++) {
        

        a = tr[i].getElementsByTagName("a")[0];
        txtValue = a.textContent || a.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.visibility = "visible";
            //tr[i].style.display = "";
        } else {
            tr[i].style.visibility = "hidden";
            //tr[i].style.display = "none";
        
        }
    }
    */
}
</script>

<br>
<!-- pcName, newIP, gateway, mac,    ciscoPort, userName, location, birou,    apps, comp, connected, portLocSwitch,     so, phone, data, portSec -->

{{!-- <main class="main">
    
    <h1>Welcome!</h1>
    <p>Deliciousness jumping into the mouth</p>
    <form class="search" action="/network/search/" method="GET">
        <input class="bar" type="text" placeholder="Search excel..." name="resName">
        <button>search</button>
    </form>
</main> --}}

{{!-- <div class="ui-widget">
    <label for="recipe">Recipe: </label><br>
    <input id="recipe">
</div>
<script>
    //$(document).ready(function() {
       // $("#recipe").autocomplete({
           // source: async function(req, res) {
             //   let data = await fetch(`http://localhost:3000/search?term=${req.term}`)
              //  .then(results => results.json())
               // .then(results => results.map(result => {
                    return {label: result.name, value: result.name, id: result._id};
                }));
               // res(data);
            },
            minLenght: 2,
           // select: function(event, ui) {
                //console.log(ui.item);
            }
        })
    });
</script> --}}